// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebAPI.Data;

#nullable disable

namespace WebAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20231029055505_add_create_time_column")]
    partial class add_create_time_column
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.22")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "60e3deba-0d92-49d2-abb1-cc583c26742c",
                            ConcurrencyStamp = "c40724cf-7f91-47a9-97df-3b2f8c960b2e",
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = "9f63ea4a-3176-4042-b007-8f2dd14e893c",
                            ConcurrencyStamp = "d47efc37-3327-4300-86a2-30b638c3cc24",
                            Name = "User",
                            NormalizedName = "USER"
                        },
                        new
                        {
                            Id = "e92c112e-12db-4eed-8c49-fda2b2527dea",
                            ConcurrencyStamp = "15f9f314-fd34-42bf-bc5c-5eb4b76d3706",
                            Name = "Manager",
                            NormalizedName = "MANAGER"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("WebAPI.Entities.ChiTietPhieuBaoDuongEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ChiTietThietBiId")
                        .HasColumnType("int");

                    b.Property<int>("PhieuBaoDuongId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ChiTietThietBiId");

                    b.HasIndex("PhieuBaoDuongId");

                    b.ToTable("ChiTietPhieuBaoDuongEntity");
                });

            modelBuilder.Entity("WebAPI.Entities.ChiTietPhieuKiemKeEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ChiTietThietBiId")
                        .HasColumnType("int");

                    b.Property<int>("PhieuKiemKeId")
                        .HasColumnType("int");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ChiTietThietBiId");

                    b.HasIndex("PhieuKiemKeId");

                    b.ToTable("chi_tiet_phieu_kiem_ke");
                });

            modelBuilder.Entity("WebAPI.Entities.ChiTietPhieuNhapXuatEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ChiTietThietBiId")
                        .HasColumnType("int");

                    b.Property<decimal?>("GiaTien")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("PhieuNhapXuatId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ChiTietThietBiId");

                    b.HasIndex("PhieuNhapXuatId");

                    b.ToTable("chi_tiet_phieu_nhap_xuat");
                });

            modelBuilder.Entity("WebAPI.Entities.KhoaEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Ma")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("SDT")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("TruongKhoaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Khoa");
                });

            modelBuilder.Entity("WebAPI.Entities.LichSuSuaChuaBaoDuongEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ChiTietThietBiId")
                        .HasColumnType("int");

                    b.Property<int>("Loai")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayThucHien")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ChiTietThietBiId");

                    b.ToTable("lich_su_sua_chua_bao_duong");
                });

            modelBuilder.Entity("WebAPI.Entities.LoaiThietBiEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Ma")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("loai_thiet_bi");
                });

            modelBuilder.Entity("WebAPI.Entities.NhanSuEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AccountId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("KhoaId")
                        .HasColumnType("int");

                    b.Property<bool?>("LaQuanLyThietBi")
                        .HasColumnType("bit");

                    b.Property<bool?>("LaTruongKhoa")
                        .HasColumnType("bit");

                    b.Property<string>("Ma")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("SDT")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("KhoaId");

                    b.ToTable("nhan_su");
                });

            modelBuilder.Entity("WebAPI.Entities.PhieuBaoDuongEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("NhanVienId")
                        .HasColumnType("int");

                    b.Property<int?>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NhanVienId");

                    b.ToTable("phieu_bao_duong");
                });

            modelBuilder.Entity("WebAPI.Entities.PhieuKiemKeEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("NhanVienId")
                        .HasColumnType("int");

                    b.Property<int?>("PhongBanId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NhanVienId");

                    b.HasIndex("PhongBanId");

                    b.ToTable("phieu_kiem_ke");
                });

            modelBuilder.Entity("WebAPI.Entities.PhieuNhapXuatEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("GhiChu")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("LoaiPhieu")
                        .HasColumnType("int");

                    b.Property<string>("Ma")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("NgayNhapXuat")
                        .HasColumnType("datetime2");

                    b.Property<string>("NguoiDaiDien")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NhaCungCap")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NhanVienId")
                        .HasColumnType("int");

                    b.Property<int?>("SoLuong")
                        .HasColumnType("int");

                    b.Property<decimal?>("TongTien")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("NhanVienId");

                    b.ToTable("phieu_nhap_xuat");
                });

            modelBuilder.Entity("WebAPI.Entities.PhieuSuaChuaEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ChiTietThietBiId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("LyDo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("NhanVienId")
                        .HasColumnType("int");

                    b.Property<int?>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ChiTietThietBiId");

                    b.HasIndex("NhanVienId");

                    b.ToTable("phieu_sua_chua");
                });

            modelBuilder.Entity("WebAPI.Entities.ThietBiYTeEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("LoaiTTBYT")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("MDRR")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Ma")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("thiet_bi_y_te");
                });

            modelBuilder.Entity("WebAPI.Entities.ThongBaoEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("MetaData")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("SendTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("thong_bao");
                });

            modelBuilder.Entity("WebAPI.Entities.ThongBaoNguoiDungEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<int>("ThongBaoId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TimeRead")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ThongBaoId");

                    b.ToTable("thong_bao_nguoi_duong");
                });

            modelBuilder.Entity("WebAPI.Entities.ThongTinChiTietThietBiEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<decimal?>("GiaTien")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("HangSanXuat")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("KhoaId")
                        .HasColumnType("int");

                    b.Property<string>("Ma")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("NamSX")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayNhap")
                        .HasColumnType("datetime2");

                    b.Property<int?>("NhanVienId")
                        .HasColumnType("int");

                    b.Property<string>("Serial")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("ThietBiId")
                        .HasColumnType("int");

                    b.Property<int>("ThietBiYTeId")
                        .HasColumnType("int");

                    b.Property<int?>("ThoiGianBaoDuong")
                        .HasColumnType("int");

                    b.Property<int?>("TinhTrang")
                        .HasColumnType("int");

                    b.Property<string>("XuatXu")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("KhoaId");

                    b.HasIndex("NhanVienId");

                    b.HasIndex("ThietBiYTeId");

                    b.ToTable("thong_tin_chi_tiet_thiet_bi");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebAPI.Entities.ChiTietPhieuBaoDuongEntity", b =>
                {
                    b.HasOne("WebAPI.Entities.ThongTinChiTietThietBiEntity", "ChiTietThietBi")
                        .WithMany()
                        .HasForeignKey("ChiTietThietBiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebAPI.Entities.PhieuBaoDuongEntity", "PhieuBaoDuong")
                        .WithMany("ChiTietPhieuBaoDuong")
                        .HasForeignKey("PhieuBaoDuongId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChiTietThietBi");

                    b.Navigation("PhieuBaoDuong");
                });

            modelBuilder.Entity("WebAPI.Entities.ChiTietPhieuKiemKeEntity", b =>
                {
                    b.HasOne("WebAPI.Entities.ThongTinChiTietThietBiEntity", "ChiTietThietBi")
                        .WithMany()
                        .HasForeignKey("ChiTietThietBiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebAPI.Entities.PhieuKiemKeEntity", "PhieuKiemKe")
                        .WithMany()
                        .HasForeignKey("PhieuKiemKeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChiTietThietBi");

                    b.Navigation("PhieuKiemKe");
                });

            modelBuilder.Entity("WebAPI.Entities.ChiTietPhieuNhapXuatEntity", b =>
                {
                    b.HasOne("WebAPI.Entities.ThongTinChiTietThietBiEntity", "ChiTietThietBi")
                        .WithMany()
                        .HasForeignKey("ChiTietThietBiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebAPI.Entities.PhieuNhapXuatEntity", "PhieuNhapXuat")
                        .WithMany()
                        .HasForeignKey("PhieuNhapXuatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChiTietThietBi");

                    b.Navigation("PhieuNhapXuat");
                });

            modelBuilder.Entity("WebAPI.Entities.LichSuSuaChuaBaoDuongEntity", b =>
                {
                    b.HasOne("WebAPI.Entities.ThongTinChiTietThietBiEntity", "ChiTietThietBi")
                        .WithMany()
                        .HasForeignKey("ChiTietThietBiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChiTietThietBi");
                });

            modelBuilder.Entity("WebAPI.Entities.NhanSuEntity", b =>
                {
                    b.HasOne("WebAPI.Entities.KhoaEntity", "Khoa")
                        .WithMany("NhanSu")
                        .HasForeignKey("KhoaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Khoa");
                });

            modelBuilder.Entity("WebAPI.Entities.PhieuBaoDuongEntity", b =>
                {
                    b.HasOne("WebAPI.Entities.NhanSuEntity", "NhanVien")
                        .WithMany()
                        .HasForeignKey("NhanVienId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NhanVien");
                });

            modelBuilder.Entity("WebAPI.Entities.PhieuKiemKeEntity", b =>
                {
                    b.HasOne("WebAPI.Entities.NhanSuEntity", "NhanVien")
                        .WithMany()
                        .HasForeignKey("NhanVienId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebAPI.Entities.KhoaEntity", "PhongBan")
                        .WithMany()
                        .HasForeignKey("PhongBanId");

                    b.Navigation("NhanVien");

                    b.Navigation("PhongBan");
                });

            modelBuilder.Entity("WebAPI.Entities.PhieuNhapXuatEntity", b =>
                {
                    b.HasOne("WebAPI.Entities.NhanSuEntity", "NhanVien")
                        .WithMany()
                        .HasForeignKey("NhanVienId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NhanVien");
                });

            modelBuilder.Entity("WebAPI.Entities.PhieuSuaChuaEntity", b =>
                {
                    b.HasOne("WebAPI.Entities.ThongTinChiTietThietBiEntity", "ChiTietThietBi")
                        .WithMany()
                        .HasForeignKey("ChiTietThietBiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebAPI.Entities.NhanSuEntity", "NhanVien")
                        .WithMany()
                        .HasForeignKey("NhanVienId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChiTietThietBi");

                    b.Navigation("NhanVien");
                });

            modelBuilder.Entity("WebAPI.Entities.ThongBaoNguoiDungEntity", b =>
                {
                    b.HasOne("WebAPI.Entities.ThongBaoEntity", "ThongBao")
                        .WithMany()
                        .HasForeignKey("ThongBaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ThongBao");
                });

            modelBuilder.Entity("WebAPI.Entities.ThongTinChiTietThietBiEntity", b =>
                {
                    b.HasOne("WebAPI.Entities.KhoaEntity", "Khoa")
                        .WithMany()
                        .HasForeignKey("KhoaId");

                    b.HasOne("WebAPI.Entities.NhanSuEntity", "NhanVien")
                        .WithMany()
                        .HasForeignKey("NhanVienId");

                    b.HasOne("WebAPI.Entities.ThietBiYTeEntity", "ThietBiYTe")
                        .WithMany("ThongTinChiTietThietBi")
                        .HasForeignKey("ThietBiYTeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Khoa");

                    b.Navigation("NhanVien");

                    b.Navigation("ThietBiYTe");
                });

            modelBuilder.Entity("WebAPI.Entities.KhoaEntity", b =>
                {
                    b.Navigation("NhanSu");
                });

            modelBuilder.Entity("WebAPI.Entities.PhieuBaoDuongEntity", b =>
                {
                    b.Navigation("ChiTietPhieuBaoDuong");
                });

            modelBuilder.Entity("WebAPI.Entities.ThietBiYTeEntity", b =>
                {
                    b.Navigation("ThongTinChiTietThietBi");
                });
#pragma warning restore 612, 618
        }
    }
}
